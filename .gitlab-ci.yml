variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

################################################################################
# Check that all three versions match
################################################################################
check-versions:
  image: ubuntu:22.04
  cache:
    paths:
      - .cache/pip
  before_script:
    - apt update && apt install -y python3 python3-pip
    - python3 --version ; pip3 --version  # for debugging purposes
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
  script:
    - python3 versiontest.py

################################################################################
# PIP
################################################################################
build-pip:
  image: ubuntu:22.04
  cache:
    paths:
      - .cache/pip
  needs:
    - job: check-versions
  before_script:
    - apt update && apt install -y python3 python3-pip
    - python3 --version ; pip3 --version  # for debugging purposes
    - pip3 install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip3 install build
  script:
    - python3 -m build
  artifacts:
    paths:
      - dist/*

test-pip:
  image: ubuntu:22.04
  needs:
  - job: build-pip
    artifacts: true
  before_script:
    - apt update && apt install -y python3 python3-pip
    - python3 --version ; pip3 --version  # for debugging purposes
    - pip3 install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip3 install dist/pydft-*.whl
    - pip3 install numpy scipy matplotlib pytest pyqint pylebedev mendeleev tqdm pytest
  script:
    - python3 -m pytest tests/* --verbose

code-coverage:
  image: ubuntu:22.04
  cache:
    paths:
      - .cache/pip
  needs:
    - job: test-pip
  before_script:
    - apt update && apt install -y python3 python3-pip
    - python3 --version ; pip3 --version  # for debugging purposes
    - pip3 install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip3 install numpy scipy matplotlib pytest pyqint pylebedev mendeleev tqdm coverage pytest
  script:
    - coverage run -m pytest tests/*
    - coverage xml pydft/*.py
    - coverage report pydft/*.py
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

deploy-pip:
  image: ubuntu:22.04
  cache:
    paths:
      - .cache/pip
  before_script:
    - apt update && apt install -y python3 python3-pip
    - python3 --version ; pip3 --version  # for debugging purposes
    - pip3 install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip3 install twine
  needs:
    - job: build-pip
      artifacts: true
    - job: test-pip
  script:
    - twine upload -u __token__ -p ${pypi_token} dist/*
  only:
    - tags
  except:
    - branches

deployment-pip-verification:
  image: ubuntu:22.04
  cache:
    paths:
      - .cache/pip
  before_script:
    - apt update && apt install -y python3 python3-pip
    - python3 --version ; pip3 --version  # for debugging purposes
    - pip3 install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip3 install numpy scipy matplotlib pytest pydft
  needs:
    - job: deploy-pip
  script:
    - python3 -m pytest tests/*
  only:
    - tags
  except:
    - branches

################################################################################
# ANACONDA
################################################################################
build-conda:
  image: continuumio/miniconda3:23.10.0-1
  needs:
    - job: check-versions
  before_script:
    - rm pyproject.toml                        # ignore pyproject.toml file
    - conda install conda-build
    - conda install -c ifilot pyqint pylebedev # needed for testing
    - conda install -c conda-forge tqdm        # needed for testing
  script:
    - conda build . --output-folder conda-bld/
  artifacts:
    paths:
      - conda-bld/noarch/*

deploy-anaconda:
  image: continuumio/miniconda3:23.10.0-1
  before_script:
    - rm pyproject.toml                        # ignore pyproject.toml file
    - conda install anaconda-client
  needs:
    - job: build-conda
      artifacts: true
  script:
    - anaconda -t ${anaconda_token} upload -u ${anaconda_user} conda-bld/noarch/pydft-*.tar.bz2
  only:
    - tags
  except:
    - branches

deployment-anaconda-verification:
  image: continuumio/miniconda3:23.10.0-1
  before_script:
    - conda install -c ifilot pyqint pylebedev pydft pytest
  needs:
    - job: deploy-anaconda
  script:
    - python -m pytest tests/*
  only:
    - tags
  except:
    - branches

################################################################################
# Documentation
################################################################################

# build the Sphinx documentation
build-docs:
  image: ghcr.io/ifilot/sphinx-qm:v0.2.0
  rules:
    - if: '$CI_COMMIT_BRANCH == "docs"'
  script:
    - cd docs
    - make html
  artifacts:
    paths:
      - docs/_build/html/
    expire_in: 1 hour

# copy the documentation over to Gitlab pages
pages: # do not change this name
  rules:
    - if: '$CI_COMMIT_BRANCH == "docs"'
  needs:
    - job: build-docs
      artifacts: true
  script:
    - cp -rv docs/_build/html public
  artifacts:
    paths:
      - public
    expire_in: 1 week